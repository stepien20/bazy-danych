typy projekcji:
-pełen odczyt tabeli 
[SELECT * FROM aktorzy; ]
cała tabela
[SELECT * FROM tabela;]

-selekcja 
[SELECT * FROM filmy WHERE rok_produkcji >1990; ]
jakiś warunek
[SELECT * FROM tabela WHERE warunek_logiczny; ]

-projekcja
[SELECT tytul,cena FROM filmy; ]
wybrane kolumny

-operacja mnogościowa



-połączenie



-grupowanie



-podzapytania


WHERE 1 -tam gdzie masz prawde; 0 nic nie wyświetli
-------------------------------------------------------
Uporządkowanie rekordów
[SELECT * FROM tabela order by kolumna1, kolumna2]
jeżeli w kolumnie1 jest tak samo to kolumna 2 rozstrzyga która bedzie wyżej/niżej
ORDER BY - Uporządkowanie
----------------------------------------------------------
Polecenia
a)odczytaj wszystkie rekordy z tabeli filmy uporzadkowane  malejaca dla filmow o jednakowej cenie
 a rosnaca dla filmow wg tytulu

[SELECT * FROM filmy ORDER BY cena DESC,tytul ASC; ]
albo
[SELECT * FROM filmy ORDER BY cena DESC,tytul;]
bo domyślnie jest ASC


b)odczytaj z filmy rekordy ktore w kolumnie cena posiadaja wartosc wieksza niz 9
[SELECT * FROM filmy WHERE cena>9]



c)odczytaj z tabeli filmy rekordy w kolumnie tytul maja wartosc Frantic
[SELECT * FROM filmy WHERE tytul='Frantic';]
albo
[SELECT * FROM filmy WHERE tytul="Frantic";]

d)odczytac rekordy ktore w kolumnie rok produkcji posiadaja wartosc 1984 lub 1986
[SELECT * FROM filmy WHERE `rok_produkcji`=1984 ||`rok_produkcji`=1986; ]
albo
[SELECT * FROM filmy WHERE `rok_produkcji`=1984 OR `rok_produkcji`=1986;]
albo
[SELECT * FROM filmy WHERE rok_produkcji IN (1984,1986);]

IN-można parę wartości od razu wpisać a nie używać ||/OR

`kolumna`-oznaczenie kolumny (bez tego też działa)
'string' "string"-oznaczenie stringów (bez tego nie znajdzie!!!!)




e)odczytaj rekordy w kol. cena posiadaja wartosc wieksza niz 9 
jednoczesnie w rok produkcji maja wartosc 2004
[SELECT * FROM filmy WHERE cena>9 && rok_produkcji=2004; ]
albo
[SELECT * FROM filmy WHERE cena>9 AND rok_produkcji=2004;]



f.1)odczytaj rekordy filmow sprzed roku 2000 kosztujacych pona 8
[SELECT * FROM `filmy` WHERE rok_produkcji<2000 && cena>8; ]
albo
[SELECT * FROM `filmy` WHERE rok_produkcji<2000 AND cena>8; ]

f.2)i jeszcze posortowane tytułem 
[SELECT * FROM `filmy` WHERE rok_produkcji<2000 && cena>8 ORDER BY tytul; ]



g)odczytaj rekordy filmu których 1 litera to 'T'
[SELECT * FROM `filmy` WHERE SUBSTRING(tytul, 1, 1)='T'; ]
albo
[SELECT * FROM `filmy` WHERE LEFT(tytul,1)='T']
albo
[SELECT * FROM `filmy` WHERE tytul LIKE 'T%'] ***% to jest taka gwiazdka lol
albo
[SELECT * FROM `filmy` WHERE tytul REGEXP '^T']  
albo
[SELECT * FROM `filmy` WHERE tytul REGEXP '^T.*'](REGEXP używa dziwnych znaczków do tego
 żeby to przeszukać {'^'-zaczyna szukanie 'T'-pierwsza litera '.'mówi że coś jeszcze 
 '*' mówi że jest cokolwiek })


h)odczytaj 3 pierwsze rekordy filmow alfabetycznie
[SELECT * FROM `filmy`  ORDER BY tytul ASC LIMIT 3;]

------------------------------------------------------
/jak układać zapytanie/
kolejność klauzul w poleceniach sql jest ściśle określona:
SELECT
FROM
WHERE
ORDER BY
--------------------------------------------------------
LEFT(string, dlugość)-bierze od LEWEJ strony ileś znaków w stringu
np
LEFT(tytul, 1) dla Terminator da nam 'T'
LEFT(tytul, 3) dla Terminator da nam 'Ter'

jest przeciwna RIGHT która bierze od prawej 

------------------------------------------------------------
FUNKCJE

ROUND()
{zwraca wartość argumentu zaokrągloną do liczby całkowitej lub danej liczb po przecinku}
[SELECT * FROM filmy WHERE ROUND(cena)=8]
wybiera filmy gdzie cena zaokrągla się do 8

LENGTH()
{zwraca liczbę znakó tekstu podanego jako argument}
[SELECT * FROM aktorzy WHERE LENGTH(imie)<=5]
wybiera aktorów z imieniem z maks 5 literami

LOWER()
{zamienia wszystkie litery na male}
[SELECT id_kopii,id_filmu,LOWER(czy_dostepna) FROM `kopie` ]
zamienia czy_dostepna z duzych na male 

UPPER
{zamienia wszystkie litery na duże}
[SELECT id_aktora,UPPER(imie),nazwisko FROM `aktorzy` ]
zamienia imie na duże litery

SUBSTRING
{wycina itp itd}
[SELECT * FROM `aktorzy` WHERE SUBSTRING(imie,1,2)="Ar"]
wyświetla każdego aktora z imieniemem zaczynającym się na 'Ar'

--------------------------------------
ograniczenie zbioru odczytywanych rekordów 

SELECT * FROM tabela limit ile_rekordów_odczytać offset ile_rekordów_pominąć

limit 5- bierze pierwsze 5
offset 5 - skipuje pierwsze 5

offset 5 limit 3- skipnie pierwsze 5 ale wezmie kolejne 3